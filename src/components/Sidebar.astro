---
import { Image } from 'astro:assets'
import { twMerge } from 'tailwind-merge'
import { Icon } from 'astro-icon/components'
import FullLogo from '../icons/logo-large.svg'

interface NavItem {
  href: string
  label: string
  icon: string
}
const navItems: NavItem[] = [
  {
    href: '/',
    label: 'Overview',
    icon: 'icon-nav-overview'
  },
  {
    href: '/transactions',
    label: 'Transactions',
    icon: 'icon-nav-transactions'
  },
  {
    href: '/budgets',
    label: 'Budgets',
    icon: 'icon-nav-budgets'
  },
  {
    href: '/pots',
    label: 'Pots',
    icon: 'icon-nav-pots'
  },
  {
    href: '/recurring-bills',
    label: 'Recurring bills',
    icon: 'icon-nav-recurring-bills'
  }
]

const navItemClasses =
  'flex rounded-t-md border-b-4 border-transparent px-200 pb-150 pt-100 md:flex md:min-w-28 md:flex-col md:items-center lg:min-w-64 lg:flex-row lg:rounded-l-none lg:rounded-r-md lg:border-b-0 lg:border-l-4 lg:px-400 lg:py-200'
const labelClasses = 'hidden md:mt-1 md:inline-block lg:ml-200 lg:mt-0'
---

<aside>
  <nav
    class='bg-grey-900 text-grey-300 text-preset-5-bold lg:flex lg:h-screen lg:flex-col lg:justify-between lg:rounded-r-lg lg:text-preset-3'
  >
    <div>
      <div class='hidden px-400 py-500 lg:block'>
        <Image src={FullLogo} alt='Finance logo' />
      </div>
      <ul
        class='flex justify-between px-200 pt-100 md:px-500 lg:flex-col lg:pl-0 lg:pr-300 lg:pt-300'
      >
        {
          navItems.map((item) => (
            <li>
              <a
                class={twMerge(navItemClasses, 'nav-item')}
                href={item.href}
                data-href={item.href}
              >
                <Icon name={item.icon} size='24' class='nav-icon' />
                <p class={labelClasses}>{item.label}</p>
              </a>
            </li>
          ))
        }
      </ul>
    </div>
    <div class='hidden py-300 lg:block'>
      <button class={navItemClasses}>
        <Icon name='icon-minimize-menu' size='24 ' />
        <p class={labelClasses}>Minimize Menu</p>
      </button>
    </div>
  </nav>
</aside>

<script>
  function updateActiveNavItem() {
    const navItems = document.querySelectorAll('.nav-item')
    const currentPath = window.location.pathname

    navItems.forEach((item) => {
      const itemHref = item.getAttribute('data-href')
      if (currentPath === itemHref) {
        item.classList.add(
          'border-secondary-green',
          'bg-beige-100',
          'text-grey-900'
        )
        const navIcon = item.querySelector('.nav-icon')
        if (navIcon) {
          navIcon.classList.add(
            'fill-current',
            'text-secondary-green',
            '[&>symbol>path]:fill-current'
          )
        }
      } else {
        item.classList.remove(
          'border-secondary-green',
          'bg-beige-100',
          'text-grey-900'
        )
        const navIcon = item.querySelector('.nav-icon')
        if (navIcon) {
          navIcon.classList.remove(
            'fill-current',
            'text-secondary-green',
            '[&>symbol>path]:fill-current'
          )
        }
      }
    })
  }

  // Update active item on page load
  updateActiveNavItem()

  // Update active item when the page changes (for client-side navigation)
  document.addEventListener('astro:page-load', updateActiveNavItem)
</script>
